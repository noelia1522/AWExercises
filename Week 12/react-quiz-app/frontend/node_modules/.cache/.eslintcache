[{"/Users/RanaSaniei/Desktop/AllWomen-Exercises/AWExercises/Week 12/react-quiz-app/frontend/src/index.tsx":"1","/Users/RanaSaniei/Desktop/AllWomen-Exercises/AWExercises/Week 12/react-quiz-app/frontend/src/App.tsx":"2","/Users/RanaSaniei/Desktop/AllWomen-Exercises/AWExercises/Week 12/react-quiz-app/frontend/src/API.ts":"3","/Users/RanaSaniei/Desktop/AllWomen-Exercises/AWExercises/Week 12/react-quiz-app/frontend/src/components/QuestionCard.tsx":"4"},{"size":273,"mtime":1676623865420,"results":"5","hashOfConfig":"6"},{"size":2767,"mtime":1676634639241,"results":"7","hashOfConfig":"6"},{"size":781,"mtime":1676630687050,"results":"8","hashOfConfig":"6"},{"size":935,"mtime":1676634183779,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"122docn",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/RanaSaniei/Desktop/AllWomen-Exercises/AWExercises/Week 12/react-quiz-app/frontend/src/index.tsx",[],[],"/Users/RanaSaniei/Desktop/AllWomen-Exercises/AWExercises/Week 12/react-quiz-app/frontend/src/App.tsx",["23"],[],"import React, { useState } from \"react\";\nimport \"./App.css\";\nimport QuestionCard from \"./components/QuestionCard\";\nimport { fetchQuizQuestions } from \"./API\";\nimport { Difficulty, QuestionState } from \"./API\";\n\nexport type userAnswersType = {\n  question: string;\n  answer: string;\n  correct_answer: string;\n  correct: boolean;\n};\n\nfunction App() {\n  const TOTAL_QUESTIONS = 10;\n  const [questions, setQuestions] = useState<QuestionState[]>([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState<userAnswersType[]>([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n  const [loading, setLoading] = useState(false);\n\n  console.log(fetchQuizQuestions(TOTAL_QUESTIONS, Difficulty.EASY));\n\n  const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\n    if (!gameOver) {\n      const answer = e.currentTarget.value;\n      const correct = questions[number].correct_answer === answer;\n      if (correct) {\n        setScore((prev) => prev + 1);\n      }\n      const answerObject = {\n        question: questions[number].question,\n        answer,\n        correct,\n        correct_answer: questions[number].correct_answer,\n      };\n      //prev = [{q:\"question1\"aswer:\"nscjkkj\", correct: flase, correct_answer: \"abc\"}, {q:\"...?\"}, {}, {}]\n      //[{q:\"question1\"aswer:\"nscjkkj\", correct: flase, correct_answer: \"abc\"}, {q:\"...?\"}, {}, {}, answerObject ]\n      setUserAnswers((prev) => [...prev, answerObject]);\n    }\n  };\n  const nextQuestion = () => {\n    const nextQuestion = number + 1;\n    if (nextQuestion === TOTAL_QUESTIONS) setGameOver(true);\n    else setNumber(nextQuestion);\n  };\n\n  const startQuiz = async () => {\n    setLoading(true);\n    setGameOver(false);\n    const newQuestions = await fetchQuizQuestions(\n      TOTAL_QUESTIONS,\n      Difficulty.EASY\n    );\n    setQuestions(newQuestions);\n    setScore(0);\n    setLoading(false);\n    setNumber(0);\n    setUserAnswers([]);\n    console.log(questions);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>React Quiz</h1>\n      <button className=\"start\" onClick={startQuiz}>\n        Start Quiz!\n      </button>\n      {!loading && !gameOver && (\n        <QuestionCard\n          question={questions[number]?.question}\n          answers={questions[number]?.answers}\n          userAnswer={userAnswers ? userAnswers[number] : undefined}\n          callback={checkAnswer}\n          questionNumber={number + 1}\n          totalQuestions={TOTAL_QUESTIONS}\n        ></QuestionCard>\n      )}\n      {!gameOver &&\n        !loading &&\n        userAnswers.length === number + 1 &&\n        number !== TOTAL_QUESTIONS - 1 && (\n          <button onClick={nextQuestion}>NextQuestion</button>\n        )}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/RanaSaniei/Desktop/AllWomen-Exercises/AWExercises/Week 12/react-quiz-app/frontend/src/API.ts",[],[],"/Users/RanaSaniei/Desktop/AllWomen-Exercises/AWExercises/Week 12/react-quiz-app/frontend/src/components/QuestionCard.tsx",[],[],{"ruleId":"24","severity":1,"message":"25","line":19,"column":10,"nodeType":"26","messageId":"27","endLine":19,"endColumn":15},"@typescript-eslint/no-unused-vars","'score' is assigned a value but never used.","Identifier","unusedVar"]