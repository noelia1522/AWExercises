{"ast":null,"code":"var _jsxFileName = \"/Users/RanaSaniei/Desktop/AllWomen-Exercises/AWExercises/Week 12/react-quiz-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport QuestionCard from \"./components/QuestionCard\";\nimport { fetchQuizQuestions } from \"./API\";\nimport { Difficulty } from \"./API\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _questions$number, _questions$number2;\n  const TOTAL_QUESTIONS = 10;\n  const [questions, setQuestions] = useState([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n  const [loading, setLoading] = useState(false);\n  console.log(fetchQuizQuestions(TOTAL_QUESTIONS, Difficulty.EASY));\n  const checkAnswer = e => {\n    if (!gameOver) {\n      const answer = e.currentTarget.value;\n      const correct = questions[number].correct_answer === answer;\n      if (correct) {\n        setScore(prev => prev + 1);\n      }\n      const answerObject = {\n        question: questions[number].question,\n        answer,\n        correct,\n        correct_answer: questions[number].correct_answer\n      };\n      setUserAnswers(prev => [...prev, answerObject]);\n    }\n  };\n  const startQuiz = async () => {\n    setLoading(true);\n    setGameOver(false);\n    const newQuestions = await fetchQuizQuestions(TOTAL_QUESTIONS, Difficulty.EASY);\n    setQuestions(newQuestions);\n    setScore(0);\n    setLoading(false);\n    setNumber(0);\n    setUserAnswers([]);\n    console.log(questions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"start\",\n      onClick: startQuiz,\n      children: \"Start Quiz!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), !loading && !gameOver && /*#__PURE__*/_jsxDEV(QuestionCard, {\n      question: (_questions$number = questions[number]) === null || _questions$number === void 0 ? void 0 : _questions$number.question,\n      answers: (_questions$number2 = questions[number]) === null || _questions$number2 === void 0 ? void 0 : _questions$number2.answers\n      // userAnswer={userAnswers ? userAnswers[number] : undefined}\n      ,\n      callback: checkAnswer,\n      questionNumber: number + 1,\n      totalQuestions: TOTAL_QUESTIONS\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4PYtmIv5WCNDvxVwRBOB8pHE1s0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","QuestionCard","fetchQuizQuestions","Difficulty","App","TOTAL_QUESTIONS","questions","setQuestions","number","setNumber","userAnswers","setUserAnswers","score","setScore","gameOver","setGameOver","loading","setLoading","console","log","EASY","checkAnswer","e","answer","currentTarget","value","correct","correct_answer","prev","answerObject","question","startQuiz","newQuestions","answers"],"sources":["/Users/RanaSaniei/Desktop/AllWomen-Exercises/AWExercises/Week 12/react-quiz-app/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport QuestionCard from \"./components/QuestionCard\";\nimport { fetchQuizQuestions } from \"./API\";\nimport { Difficulty, QuestionState } from \"./API\";\n\nexport type userAnswersType = {\n  question: string;\n  answer: string;\n  correct_answer: string;\n  correct: boolean;\n};\n\nfunction App() {\n  const TOTAL_QUESTIONS = 10;\n  const [questions, setQuestions] = useState<QuestionState[]>([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState<userAnswersType[]>([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n  const [loading, setLoading] = useState(false);\n\n  console.log(fetchQuizQuestions(TOTAL_QUESTIONS, Difficulty.EASY));\n\n  const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\n    if (!gameOver) {\n      const answer = e.currentTarget.value;\n      const correct = questions[number].correct_answer === answer;\n      if (correct) {\n        setScore((prev) => prev + 1);\n      }\n      const answerObject = {\n        question: questions[number].question,\n        answer,\n        correct,\n        correct_answer: questions[number].correct_answer,\n      };\n      setUserAnswers((prev) => [...prev, answerObject]);\n    }\n  };\n\n  const startQuiz = async () => {\n    setLoading(true);\n    setGameOver(false);\n    const newQuestions = await fetchQuizQuestions(\n      TOTAL_QUESTIONS,\n      Difficulty.EASY\n    );\n    setQuestions(newQuestions);\n    setScore(0);\n    setLoading(false);\n    setNumber(0);\n    setUserAnswers([]);\n    console.log(questions);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>React Quiz</h1>\n      <button className=\"start\" onClick={startQuiz}>\n        Start Quiz!\n      </button>\n      {!loading && !gameOver && (\n        <QuestionCard\n          question={questions[number]?.question}\n          answers={questions[number]?.answers}\n          // userAnswer={userAnswers ? userAnswers[number] : undefined}\n          callback={checkAnswer}\n          questionNumber={number + 1}\n          totalQuestions={TOTAL_QUESTIONS}\n        ></QuestionCard>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,YAAY,MAAM,2BAA2B;AACpD,SAASC,kBAAkB,QAAQ,OAAO;AAC1C,SAASC,UAAU,QAAuB,OAAO;AAAC;AASlD,SAASC,GAAG,GAAG;EAAA;EAAA;EACb,MAAMC,eAAe,GAAG,EAAE;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAkB,EAAE,CAAC;EAC/D,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAoB,EAAE,CAAC;EACrE,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAE7CkB,OAAO,CAACC,GAAG,CAACjB,kBAAkB,CAACG,eAAe,EAAEF,UAAU,CAACiB,IAAI,CAAC,CAAC;EAEjE,MAAMC,WAAW,GAAIC,CAAsC,IAAK;IAC9D,IAAI,CAACR,QAAQ,EAAE;MACb,MAAMS,MAAM,GAAGD,CAAC,CAACE,aAAa,CAACC,KAAK;MACpC,MAAMC,OAAO,GAAGpB,SAAS,CAACE,MAAM,CAAC,CAACmB,cAAc,KAAKJ,MAAM;MAC3D,IAAIG,OAAO,EAAE;QACXb,QAAQ,CAAEe,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;MAC9B;MACA,MAAMC,YAAY,GAAG;QACnBC,QAAQ,EAAExB,SAAS,CAACE,MAAM,CAAC,CAACsB,QAAQ;QACpCP,MAAM;QACNG,OAAO;QACPC,cAAc,EAAErB,SAAS,CAACE,MAAM,CAAC,CAACmB;MACpC,CAAC;MACDhB,cAAc,CAAEiB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEC,YAAY,CAAC,CAAC;IACnD;EACF,CAAC;EAED,MAAME,SAAS,GAAG,YAAY;IAC5Bd,UAAU,CAAC,IAAI,CAAC;IAChBF,WAAW,CAAC,KAAK,CAAC;IAClB,MAAMiB,YAAY,GAAG,MAAM9B,kBAAkB,CAC3CG,eAAe,EACfF,UAAU,CAACiB,IAAI,CAChB;IACDb,YAAY,CAACyB,YAAY,CAAC;IAC1BnB,QAAQ,CAAC,CAAC,CAAC;IACXI,UAAU,CAAC,KAAK,CAAC;IACjBR,SAAS,CAAC,CAAC,CAAC;IACZE,cAAc,CAAC,EAAE,CAAC;IAClBO,OAAO,CAACC,GAAG,CAACb,SAAS,CAAC;EACxB,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA,UAAI;IAAU;MAAA;MAAA;MAAA;IAAA,QAAK,eACnB;MAAQ,SAAS,EAAC,OAAO;MAAC,OAAO,EAAEyB,SAAU;MAAA,UAAC;IAE9C;MAAA;MAAA;MAAA;IAAA,QAAS,EACR,CAACf,OAAO,IAAI,CAACF,QAAQ,iBACpB,QAAC,YAAY;MACX,QAAQ,uBAAER,SAAS,CAACE,MAAM,CAAC,sDAAjB,kBAAmBsB,QAAS;MACtC,OAAO,wBAAExB,SAAS,CAACE,MAAM,CAAC,uDAAjB,mBAAmByB;MAC5B;MAAA;MACA,QAAQ,EAAEZ,WAAY;MACtB,cAAc,EAAEb,MAAM,GAAG,CAAE;MAC3B,cAAc,EAAEH;IAAgB;MAAA;MAAA;MAAA;IAAA,QAEnC;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AAAC,GA7DQD,GAAG;AAAA,KAAHA,GAAG;AA+DZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}