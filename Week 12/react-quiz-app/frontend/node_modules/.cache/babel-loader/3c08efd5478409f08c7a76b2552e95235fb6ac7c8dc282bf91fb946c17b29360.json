{"ast":null,"code":"var _jsxFileName = \"/Users/RanaSaniei/Desktop/AllWomen-Exercises/AWExercises/Week 12/react-quiz-app/src/components/QuestionCard.tsx\";\nimport React from \"react\";\n//types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionCard = _ref => {\n  let {\n    question,\n    answers,\n    callback,\n    questionNumber,\n    totalQuestions\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"number\",\n      children: [\"Question: \", questionNumber, \"/ \", totalQuestions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"question\",\n      children: [question, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: answers.map(answer => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: callback,\n          children: answer\n        }, answer, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = QuestionCard;\nexport default QuestionCard;\nvar _c;\n$RefreshReg$(_c, \"QuestionCard\");","map":{"version":3,"names":["React","QuestionCard","question","answers","callback","questionNumber","totalQuestions","map","answer"],"sources":["/Users/RanaSaniei/Desktop/AllWomen-Exercises/AWExercises/Week 12/react-quiz-app/src/components/QuestionCard.tsx"],"sourcesContent":["import React from \"react\";\n//types\nimport { userAnswersType } from \"../App\";\ntype QCProps = {\n  question: string;\n  answers: string[];\n  callback: any; //change later\n  questionNumber: number;\n  totalQuestions: number;\n  userAnswer: userAnswersType;\n};\n\nconst QuestionCard: React.FC<QCProps> = ({\n  question,\n  answers,\n  callback,\n  questionNumber,\n  totalQuestions,\n}) => {\n  return (\n    <div>\n      <p className=\"number\">\n        Question: {questionNumber}/ {totalQuestions}\n      </p>\n      <p className=\"question\">{question}:</p>\n      <div>\n        {answers.map((answer) => (\n          <div>\n            <button key={answer} onClick={callback}>\n              {answer}\n            </button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default QuestionCard;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AAAA;AAWA,MAAMC,YAA+B,GAAG,QAMlC;EAAA,IANmC;IACvCC,QAAQ;IACRC,OAAO;IACPC,QAAQ;IACRC,cAAc;IACdC;EACF,CAAC;EACC,oBACE;IAAA,wBACE;MAAG,SAAS,EAAC,QAAQ;MAAA,WAAC,YACV,EAACD,cAAc,EAAC,IAAE,EAACC,cAAc;IAAA;MAAA;MAAA;MAAA;IAAA,QACzC,eACJ;MAAG,SAAS,EAAC,UAAU;MAAA,WAAEJ,QAAQ,EAAC,GAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAI,eACvC;MAAA,UACGC,OAAO,CAACI,GAAG,CAAEC,MAAM,iBAClB;QAAA,uBACE;UAAqB,OAAO,EAAEJ,QAAS;UAAA,UACpCI;QAAM,GADIA,MAAM;UAAA;UAAA;UAAA;QAAA;MAEV;QAAA;QAAA;QAAA;MAAA,QAEZ;IAAC;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,KAxBIP,YAA+B;AA0BrC,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}